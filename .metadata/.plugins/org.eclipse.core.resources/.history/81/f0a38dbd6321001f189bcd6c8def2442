package gui;

import model.Administrator;
import model.Doctor;
import model.Patient;
import model.User;
import model.UserRole;
import service.UserService;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class UserFormFrame extends JFrame {
    private UserService userService;
    private User user;
    private UserManagementFrame parentFrame;
    private JTextField idField, firstNameField, lastNameField, jmbgField, genderField, addressField, phoneNumberField, usernameField, passwordField;
    private JComboBox<String> roleComboBox;

    public UserFormFrame(UserService userService, User user, UserManagementFrame parentFrame) {
        this.userService = userService;
        this.user = user;
        this.parentFrame = parentFrame;
        initialize();
    }

    private void initialize() {
        setTitle(user == null ? "Dodaj korisnika" : "Izmeni korisnika");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel panel = new JPanel(new GridLayout(10, 2));
        
        panel.add(new JLabel("ID:"));
        idField = new JTextField(user == null ? "" : user.getId());
        panel.add(idField);

        panel.add(new JLabel("Ime:"));
        firstNameField = new JTextField(user == null ? "" : user.getFirstName());
        panel.add(firstNameField);

        panel.add(new JLabel("Prezime:"));
        lastNameField = new JTextField(user == null ? "" : user.getLastName());
        panel.add(lastNameField);

        panel.add(new JLabel("JMBG:"));
        jmbgField = new JTextField(user == null ? "" : user.getJmbg());
        panel.add(jmbgField);

        panel.add(new JLabel("Pol:"));
        genderField = new JTextField(user == null ? "" : user.getGender());
        panel.add(genderField);

        panel.add(new JLabel("Adresa:"));
        addressField = new JTextField(user == null ? "" : user.getAddress());
        panel.add(addressField);

        panel.add(new JLabel("Broj telefona:"));
        phoneNumberField = new JTextField(user == null ? "" : user.getPhoneNumber());
        panel.add(phoneNumberField);

        panel.add(new JLabel("Korisničko ime:"));
        usernameField = new JTextField(user == null ? "" : user.getUsername());
        panel.add(usernameField);

        panel.add(new JLabel("Lozinka:"));
        passwordField = new JTextField(user == null ? "" : user.getPassword());
        panel.add(passwordField);

        panel.add(new JLabel("Uloga:"));
        roleComboBox = new JComboBox<>(new String[]{"ADMINISTRATOR", "DOCTOR", "PATIENT"});
        roleComboBox.setSelectedItem(user == null ? "" : user.getRole().name());
        panel.add(roleComboBox);

        JButton saveButton = new JButton("Sačuvaj");
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveUser();
            }
        });
        panel.add(saveButton);

        add(panel);
    }

    private void saveUser() {
        // Validacija podataka
        if (firstNameField.getText().isEmpty() || lastNameField.getText().isEmpty() || jmbgField.getText().isEmpty() || genderField.getText().isEmpty() ||
            addressField.getText().isEmpty() || phoneNumberField.getText().isEmpty() || usernameField.getText().isEmpty() || passwordField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Molimo popunite sva polja.", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String id = idField.getText();
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String jmbg = jmbgField.getText();
        String gender = genderField.getText();
        String address = addressField.getText();
        String phoneNumber = phoneNumberField.getText();
        String username = usernameField.getText();
        String password = passwordField.getText();
        UserRole role = UserRole.valueOf(roleComboBox.getSelectedItem().toString());

        User newUser;
        switch (role) {
            case ADMINISTRATOR:
                newUser = new Administrator(id, firstName, lastName, jmbg, gender, address, phoneNumber, username, password);
                break;
            case DOCTOR:
                newUser = new Doctor(id, firstName, lastName, jmbg, gender, address, phoneNumber, username, password);
                break;
            case PATIENT:
                newUser = new Patient(id, firstName, lastName, jmbg, gender, address, phoneNumber, username, password);
                break;
            default:
                throw new IllegalArgumentException("Nepoznata uloga korisnika");
        }

        if (user == null) {
            userService.addUser(newUser);
        } else {
            int index = userService.getUsers().indexOf(user);
            userService.getUsers().set(index, newUser);
        }

        userService.saveUsers();
        parentFrame.loadUsers();
        dispose();
    }
}