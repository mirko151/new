// LoginFrame.java
package gui;

import model.Administrator;
import model.Doctor;
import model.Patient;
import model.User;
import service.AppointmentService;
import service.UserService;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class LoginFrame extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton loginButton;
    private UserService userService;
    private AppointmentService appointmentService;

    public LoginFrame(UserService userService, AppointmentService appointmentService) {
        this.userService = userService;
        this.appointmentService = appointmentService;
        initialize();
    }

    private void initialize() {
        setTitle("Login");
        setSize(300, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(3, 2));

        panel.add(new JLabel("Korisničko ime:"));
        usernameField = new JTextField();
        panel.add(usernameField);

        panel.add(new JLabel("Lozinka:"));
        passwordField = new JPasswordField();
        panel.add(passwordField);

        loginButton = new JButton("Prijava");
        panel.add(loginButton);

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleLogin();
            }
        });

        add(panel);
    }

    private void handleLogin() {
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());

        try {
            User user = userService.login(username, password);
            JOptionPane.showMessageDialog(this, "Uspešna prijava!", "Success", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();

            if (user instanceof Administrator) {
                new UserManagementFrame(userService).setVisible(true);
            } else if (user instanceof Patient) {
                new PatientManagementFrame((Patient) user, userService, appointmentService).setVisible(true);
            } else if (user instanceof Doctor) {
                new DoctorManagementFrame((Doctor) user, userService, appointmentService).setVisible(true);
            }
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String[] args) {
        String userFilePath = "users.txt";
        String appointmentFilePath = "appointments.txt";

        UserService userService = new UserService(userFilePath);

        // Dobijanje doktora i pacijenata
        List<Doctor> doctors = userService.getUsers().stream()
                .filter(u -> u instanceof Doctor)
                .map(u -> (Doctor) u)
                .toList();
        List<Patient> patients = userService.getUsers().stream()
                .filter(u -> u instanceof Patient)
                .map(u -> (Patient) u)
                .toList();

        AppointmentService appointmentService = new AppointmentService(appointmentFilePath, doctors, patients);

        // Dodajemo testne korisnike ako ih nema (u stvarnom slučaju, korisnici bi se učitali iz fajla)
        if (userService.getUsers().isEmpty()) {
            userService.addUser(new Administrator("1", "Admin", "Adminovic", "1234567890123", "M", "Adresa 1", "123456789", "admin", "admin"));
            userService.addUser(new Doctor("2", "Doctor", "Doctorovic", "1234567890124", "F", "Adresa 2", "123456780", "doctor", "doctor"));
            userService.addUser(new Patient("3", "Patient", "Patientovic", "1234567890125", "F", "Adresa 3", "123456781", "patient", "patient"));
        }

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoginFrame(userService, appointmentService).setVisible(true);
            }
        });
    }
}
